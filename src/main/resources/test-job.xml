<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:batch="http://www.springframework.org/schema/batch" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:task="http://www.springframework.org/schema/task" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/batch 
		http://www.springframework.org/schema/batch/spring-batch.xsd
		http://www.springframework.org/schema/beans 
		http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/task
        http://www.springframework.org/schema/task/spring-task.xsd
        http://www.springframework.org/schema/context
        http://www.springframework.org/schema/context/spring-context.xsd">

	<context:annotation-config />
	
  <bean id="accountGroupTableReader"
	class="org.springframework.batch.item.database.JdbcPagingItemReader"
	scope="step">
	<property name="dataSource" ref="dataSource" />
	<property name="queryProvider">
	  <bean
		class="org.springframework.batch.item.database.support.SqlPagingQueryProviderFactoryBean">
		<property name="dataSource" ref="dataSource" />
		<property name="selectClause">
		 <value>
		 <![CDATA[ SELECT STEP_EXECUTION_ID,VERSION,STEP_NAME,JOB_EXECUTION_ID,START_TIME,END_TIME,STATUS,
		 			COMMIT_COUNT,READ_COUNT,FILTER_COUNT,WRITE_COUNT,
  					READ_SKIP_COUNT,WRITE_SKIP_COUNT,PROCESS_SKIP_COUNT,ROLLBACK_COUNT,EXIT_CODE,EXIT_MESSAGE,LAST_UPDATED
  			]]>
		 </value>
		 </property>
		<property name="fromClause" value="BATCH_STEP_EXECUTION" />
		<property name="whereClause"> 
			<value><![CDATA[ STEP_EXECUTION_ID >= :minValue and STEP_EXECUTION_ID <= :maxValue]]></value>
		</property>
		<property name="sortKey" value="ACGRP_SK" />
	  </bean>
	</property>
	<!-- Inject via the ExecutionContext in rangePartitioner -->
	<property name="parameterValues">
	  <map>
		<entry key="minValue" value="#{stepExecutionContext[minValue]}" />
		<entry key="maxValue" value="#{stepExecutionContext[maxValue]}" />
	  </map>
	</property>
	<property name="pageSize" value="10" />
	<property name="rowMapper" ref="commonRowMapper"/>
  </bean>	

	<bean id="accountGroupItemWriter" class="org.springframework.batch.item.file.FlatFileItemWriter">
		<!-- write to this csv file -->
		<property name="resource" value="file:/Users/adcbfn1/Documents/workspace_fmd/SpringIntegrationSample/src/main/resources/report.csv" />
		<property name="shouldDeleteIfExists" value="true" />

		<property name="lineAggregator">
			<bean
				class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
				<property name="delimiter" value="," />
				<property name="fieldExtractor">
					<bean
						class="org.springframework.batch.item.file.transform.PassThroughFieldExtractor" />
				</property>
			</bean>
		</property>
	</bean>


	<batch:job id="importTestJob" job-repository="jobRepository">
		<batch:step id="processPinCodeFile">
			<batch:partition step="processAccountGroupRecords"
				partitioner="accountGroupPKRangePartitioner">
				<batch:handler grid-size="5"
					task-executor="threadPoolTaskExecutor" />
			</batch:partition>
			<batch:end on="COMPLETED" />
		</batch:step>
	</batch:job>

	<batch:step id="processAccountGroupRecords">
		<batch:tasklet transaction-manager="transactionManager">
			<batch:chunk reader="accountGroupTableReader" writer="accountGroupItemWriter"
				commit-interval="4000">
			</batch:chunk>
		</batch:tasklet>
	</batch:step>

</beans>        